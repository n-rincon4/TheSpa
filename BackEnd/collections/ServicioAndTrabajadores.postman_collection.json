{
	"info": {
		"_postman_id": "6e6f9200-f5f5-442e-9e6b-4b61339142dd",
		"name": "ServicioAndTrabajadores",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25783612"
	},
	"item": [
		{
			"name": "Crear una ubicación",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"ubicacion_id_1\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"latitud\": 4.603014,\n    \"longitud\": 74.065227,\n    \"ciudad\": \"Bogotá\",\n    \"direccion\": \"Cl. 20 #19a-71 a 19a-1, Bogotá\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/ubicaciones",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ubicaciones"
					]
				}
			},
			"response": [
				{
					"name": "Crear una ubicación",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"latitud\": 4.603014,\n    \"longitud\": 74.065227,\n    \"ciudad\": \"Bogotá\",\n    \"direccion\": \"Cl. 20 #19a-71 a 19a-1, Bogotá\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ubicaciones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ubicaciones"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Crear una Sede",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"sede_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Spa del Jardín\",\r\n    \"imagen\": \"https://www.visit.alsace/wp-content/uploads/lei/pictures/215002309-nature-spa-la-cheneaudiere-11-1600x900.jpg\",\r\n    \"ubicacion\": {\r\n        \"id\": {{ubicacion_id_1}}\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/sedes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"sedes"
					]
				}
			},
			"response": [
				{
					"name": "Crear una Sede",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"nombre\": \"Spa del Jardín\",\r\n    \"imagen\": \"https://www.visit.alsace/wp-content/uploads/lei/pictures/215002309-nature-spa-la-cheneaudiere-11-1600x900.jpg\",\r\n    \"ubicacion\": {\r\n        \"id\": 1,\r\n        \"latitud\": 4.603014,\r\n        \"longitud\": 74.065227,\r\n        \"ciudad\": \"Bogotá\",\r\n        \"direccion\": \"Cl. 20 #19a-71 a 19a-1, Bogotá\",\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/sedes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sedes"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Crear un Servicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"servicio_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"duracion\": 3,\r\n    \"restricciones\": \"Ser mayor de 16 años\",\r\n    \"disponible\": true,\r\n    \"horaInicio\": 8,\r\n    \"nombre\": \"masaje\",\r\n    \"descripcion\": \"masaje de relajacion\",\r\n    \"precio\": \"30000\",\r\n    \"imagen\": \"https://thumbs.dreamstime.com/b/spa-massage-outdoor-balinese-woman-receiving-back-53105227.jpg\",\r\n    \"sede\": {\r\n        \"id\": {{sede_id_1}}\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/servicios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios"
					]
				}
			},
			"response": [
				{
					"name": "Crear un Servicio",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"nombre\": \"masaje\",\r\n    \"descripcion\": \"masaje de relajacion\",\r\n    \"precio\": 30000.0,\r\n    \"imagen\": \"https://thumbs.dreamstime.com/b/spa-massage-outdoor-balinese-woman-receiving-back-53105227.jpg\",\r\n    \"duracion\": 3,\r\n    \"restricciones\": \"restricción\",\r\n    \"disponible\": true,\r\n    \"horaInicio\": 8,\r\n    \"sede\": {\r\n        \"id\": 1,\r\n        \"nombre\": \"Spa del Jardín\",\r\n        \"imagen\": \"https://www.visit.alsace/wp-content/uploads/lei/pictures/215002309-nature-spa-la-cheneaudiere-11-1600x900.jpg\",\r\n        \"ubicacion\": {\r\n            \"id\": 1,\r\n            \"latitud\": 4.603014,\r\n            \"longitud\": 74.065227,\r\n            \"ciudad\": \"Bogotá\",\r\n            \"direccion\": \"Cl. 20 #19a-71 a 19a-1, Bogotá\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/servicios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": [],
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Crear un Trabajador",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"trabajador_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Dwight Schrute\",\r\n    \"foto\": \"https://cdn.hobbyconsolas.com/sites/navi.axelspringer.es/public/styles/hc_1440x810/public/media/image/2022/06/office-dwight-schrute-2733589.jpg?itok=zAhOkd3D\",\r\n    \"calificacion\": 10,\r\n    \"enHallOfFame\": true,\r\n    \"sedes\": [\r\n        {\r\n            \"id\": {{sede_id_1}}\r\n        }\r\n    ],\r\n    \"servicios\": [ {\r\n        \"id\": {{servicio_id_1}}\r\n    }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/trabajadores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"trabajadores"
					]
				}
			},
			"response": [
				{
					"name": "Crear un Trabajador",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"identificacion\": 45895622,\r\n    \"nombre\": \"Dwight Schrute\",\r\n    \"foto\": \"https://cdn.hobbyconsolas.com/sites/navi.axelspringer.es/public/styles/hc_1440x810/public/media/image/2022/06/office-dwight-schrute-2733589.jpg?itok=zAhOkd3D\",\r\n    \"calificacion\": 10,\r\n    \"enHallOfFame\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trabajadores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trabajadores"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Agregar un Trabajador que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"SERVICE_NOT_FOUND\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{servicio_id_1}}",
						"trabajadores",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Agregar un Trabajador que no existe",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:15:29\",\r\n        \"message\": \"El Trabajador con el id dado no fue encontrado\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}",
								"trabajadores",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Obtener un Trabajador de un Servicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/{{trabajador_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{servicio_id_1}}",
						"trabajadores",
						"{{trabajador_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un Trabajador de un Servicio",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"descuento\": 20,\r\n    \"nombre\": \"Ritual de relajación profunda\",\r\n    \"imagen\": \"https://www.centerpointmassage.com/web/core/pic/620.jpg\",\r\n    \"servicios\": [],\r\n    \"trabajadores\": [\r\n        {\r\n            \"id\": 1,\r\n            \"identificacion\": 45895622,\r\n            \"nombre\": \"Dwight Schrute\",\r\n            \"foto\": \"https://cdn.hobbyconsolas.com/sites/navi.axelspringer.es/public/styles/hc_1440x810/public/media/image/2022/06/office-dwight-schrute-2733589.jpg?itok=zAhOkd3D\",\r\n            \"calificacion\": 10,\r\n            \"enHallOfFame\": true\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/{{trabajador_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}",
								"trabajadores",
								"{{trabajador_id_1}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Obtener un Trabajador que no existe de un Servicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"El trabajador con el id = {} no existe\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{servicio_id_1}}",
						"trabajadores",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un Trabajador que no existe de un Servicio",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:17:39\",\r\n        \"message\": \"El Trabajador del id dado no fue encontrado\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}",
								"trabajadores",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Crear un Trabajador 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"trabajador_id_2\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"identificacion\": 45895623,\r\n    \"nombre\": \"Charles Boyle\",\r\n    \"foto\": \"https://preview.redd.it/1vo0ix78h0q81.jpg?width=640&crop=smart&auto=webp&s=f493525e18b7abebae83c4fdbcc802b87e0646a3\",\r\n    \"calificacion\": 10,\r\n    \"enHallOfFame\": true,\r\n \"sedes\": [\r\n        {\r\n            \"id\": {{sede_id_1}}\r\n        }\r\n    ],\r\n    \"servicios\": [ \r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/trabajadores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"trabajadores"
					]
				}
			},
			"response": [
				{
					"name": "Crear un Trabajador",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2,\r\n    \"identificacion\": 45895623,\r\n    \"nombre\": \"Charles Boyle\",\r\n    \"foto\": \"https://preview.redd.it/1vo0ix78h0q81.jpg?width=640&crop=smart&auto=webp&s=f493525e18b7abebae83c4fdbcc802b87e0646a3\",\r\n    \"calificacion\": 10,\r\n    \"enHallOfFame\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trabajadores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trabajadores"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Obtener un Trabajador que no está asociado a un Servicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"El trabajador con el id = {} no esta en el servicio con el id = {}\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/{{trabajador_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{servicio_id_1}}",
						"trabajadores",
						"{{trabajador_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un Trabajador que no está asociado a un Servicio",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"apierror\": {\r\n        \"status\": \"PRECONDITION_FAILED\",\r\n        \"timestamp\": \"21-02-2023 10:19:03\",\r\n        \"message\": \"El trabajador no está asociado al servicio\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/{{trabajador_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}",
								"trabajadores",
								"{{trabajador_id_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "plain",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Obtener los Trabajadores de un Servicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Numero de trabajadores > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{servicio_id_1}}",
						"trabajadores"
					]
				}
			},
			"response": [
				{
					"name": "Obtener los Trabajadores de un Servicio",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"descuento\": 20,\r\n    \"nombre\": \"Ritual de relajación profunda\",\r\n    \"imagen\": \"https://www.centerpointmassage.com/web/core/pic/620.jpg\",\r\n    \"servicios\": [],\r\n    \"trabajadores\": [\r\n        {\r\n            \"id\": 1,\r\n            \"identificacion\": 45895622,\r\n            \"nombre\": \"Dwight Schrute\",\r\n            \"foto\": \"https://cdn.hobbyconsolas.com/sites/navi.axelspringer.es/public/styles/hc_1440x810/public/media/image/2022/06/office-dwight-schrute-2733589.jpg?itok=zAhOkd3D\",\r\n            \"calificacion\": 10,\r\n            \"enHallOfFame\": true\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}",
								"trabajadores"
							]
						}
					},
					"status": "OKs",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Asociar Trabajadores a un Servicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": {{trabajador_id_1}},\r\n        \"identificacion\": 45895622,\r\n        \"nombre\": \"Dwight Schrute\",\r\n        \"foto\": \"https://cdn.hobbyconsolas.com/sites/navi.axelspringer.es/public/styles/hc_1440x810/public/media/image/2022/06/office-dwight-schrute-2733589.jpg?itok=zAhOkd3D\",\r\n        \"calificacion\": 10,\r\n        \"enHallOfFame\": true\r\n    },\r\n    {\r\n        \"id\": {{trabajador_id_2}},\r\n        \"identificacion\": 45895622,\r\n        \"nombre\": \"Dwight Schrute\",\r\n        \"foto\": \"https://cdn.hobbyconsolas.com/sites/navi.axelspringer.es/public/styles/hc_1440x810/public/media/image/2022/06/office-dwight-schrute-2733589.jpg?itok=zAhOkd3D\",\r\n        \"calificacion\": 10,\r\n        \"enHallOfFame\": true\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{servicio_id_1}}",
						"trabajadores"
					]
				}
			},
			"response": [
				{
					"name": "Asociar Trabajadores a un Servicio",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": 1,\r\n        \"identificacion\": 45895622,\r\n        \"nombre\": \"Dwight Schrute\",\r\n        \"foto\": \"https://cdn.hobbyconsolas.com/sites/navi.axelspringer.es/public/styles/hc_1440x810/public/media/image/2022/06/office-dwight-schrute-2733589.jpg?itok=zAhOkd3D\",\r\n        \"calificacion\": 10,\r\n        \"enHallOfFame\": true\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"identificacion\": 45895622,\r\n        \"nombre\": \"Dwight Schrute\",\r\n        \"foto\": \"https://cdn.hobbyconsolas.com/sites/navi.axelspringer.es/public/styles/hc_1440x810/public/media/image/2022/06/office-dwight-schrute-2733589.jpg?itok=zAhOkd3D\",\r\n        \"calificacion\": 10,\r\n        \"enHallOfFame\": true\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}",
								"trabajadores"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Asociar Trabajadores que no existen a un Servicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"El trabajador con el id = {} no existe\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": 0,\r\n        \"identificacion\": 45895622,\r\n        \"nombre\": \"Dwight Schrute\",\r\n        \"foto\": \"https://cdn.hobbyconsolas.com/sites/navi.axelspringer.es/public/styles/hc_1440x810/public/media/image/2022/06/office-dwight-schrute-2733589.jpg?itok=zAhOkd3D\",\r\n        \"calificacion\": 10,\r\n        \"enHallOfFame\": true\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{servicio_id_1}}",
						"trabajadores"
					]
				}
			},
			"response": [
				{
					"name": "Asociar Packs de Servicios que no existen a un Servicio",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:25:21\",\r\n        \"message\": \"El Trabajador del id dado no fue encontrado\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}",
								"trabajadores"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Borrar un Trabajador de un Servicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/{{trabajador_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{servicio_id_1}}",
						"trabajadores",
						"{{trabajador_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un Trabajador de un Servicio",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/{{trabajador_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}",
								"trabajadores",
								"{{trabajador_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Borrar un Trabajador a un Servicio que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"El servicio con el id = {} no existe\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/servicios/0/trabajadores/{{trabajador_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"0",
						"trabajadores",
						"{{trabajador_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un Trabajador a un Servicio que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/servicios/0/trabajadores/{{trabajador_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"0",
								"trabajadores",
								"{{trabajador_id_1}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Borrar un Trabajador que no existe de un Servicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"El trabajador con el id = {} no existe\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{servicio_id_1}}",
						"trabajadores",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un Trabajador que no existe de un Servicio",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}/trabajadores/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}",
								"trabajadores",
								"0"
							]
						}
					},
					"status": "Not Founds",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Borrar un Trabajador",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/trabajadores/{{trabajador_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"trabajadores",
						"{{trabajador_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un Trabajador",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un Trabajador 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/trabajadores/{{trabajador_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"trabajadores",
						"{{trabajador_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un Trabajador",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar un Servicio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"servicios",
						"{{servicio_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar un Servicio",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/servicios/{{servicio_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servicios",
								"{{servicio_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar una Sede",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/sedes/{{sede_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"sedes",
						"{{sede_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar una Sede",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sedes/{{sede_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sedes",
								"{{sede_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Borrar una Ubicación",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ubicaciones/{{ubicacion_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ubicaciones",
						"{{ubicacion_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar una Ubicación",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ubicaciones/{{ubicacion_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ubicaciones",
								"{{ubicacion_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	]
}